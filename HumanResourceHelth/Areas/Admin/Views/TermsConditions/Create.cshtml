@using HumanResourceHelth.Model.Resources
@model HumanResourceHelth.Model.TermsConditions

@{
    ViewBag.Title = "Create";
    Session["Backto"] = "TermsConditions";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    bool isArabic = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft;
    string dir = isArabic ? "rtl" : "ltr";
    var alignclass = isArabic ? "pull-left" : "pull-right";
    var labelClass = isArabic ? "pull-right" : "pull-left";
    var Opalignclass = isArabic ? "pull-left" : "pull-right";
    var rotate = isArabic ? "-webkit-transform:rotate(180deg);-moz-transform: rotate(180deg);-ms-transform: rotate(180deg);-o-transform: rotate(180deg);transform: rotate(180deg);" : "";
}
<div class="container" dir="@dir">
    <div class="panel panel-info">
        <div class="panel-heading">

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <div class="row">
                    <h1 class="h2 @Opalignclass"> @Resources.General.TermsConditions</h1>
                </div>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group ml-2 col-lg-12">
                        <a class="btn btn-lg btn-warning @labelClass" href="@Url.Action("Index")">
                            <i class="fa fa-backward" style="@rotate"></i>
                            @Resources.General.Back
                        </a>
                    </div>
                </div>
            </div>

        </div>
        <div class="panel-body" dir="@dir">

            @using (Html.BeginForm("Create", "TermsConditions", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="h4 m-15 p-l-5" dir="@dir">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="form-group col-lg-6 @labelClass">
                            @Html.Label(Resources.General.TermsConditionType, htmlAttributes: new { @class = "control-label col-lg-2 " + labelClass })
                            <div class="col-lg-10">
                                @Html.DropDownListFor(model => model.TermsConditionType, ViewBag.TermsType as SelectList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TermsConditionType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.Label(Resources.General.TermsConditionDomain, htmlAttributes: new { @class = "control-label col-lg-2 " + labelClass })
                            <div class="col-lg-10">
                                @Html.DropDownListFor(model => model.CountryId, ViewBag.Countries as SelectList, new { @class = "form-control select-dropdown" })
                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6 @labelClass">
                            @Html.Label(Resources.General.TermsConditionTitle + " Arabic", htmlAttributes: new { @class = "control-label col-lg-2 " + labelClass })
                            <div class="col-lg-10">
                                @Html.EditorFor(model => model.ArabicTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ArabicTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.Label(Resources.General.TermsConditionText + " Arabic", htmlAttributes: new { @class = "control-label col-lg-2 " + labelClass })
                            <div class="col-lg-10">
                                @Html.TextAreaFor(model => model.ArabicText, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ArabicText, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-6 @labelClass">
                            @Html.Label(Resources.General.TermsConditionTitle + " English", htmlAttributes: new { @class = "control-label col-lg-2 " + labelClass })
                            <div class="col-lg-10">
                                @Html.EditorFor(model => model.EnglishTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EnglishTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.Label(Resources.General.TermsConditionText + " English", htmlAttributes: new { @class = "control-label col-lg-2 " + labelClass })
                            <div class="col-lg-10">
                                @Html.TextAreaFor(model => model.EnglishText, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EnglishText, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        <div class="col-lg-offset-2 col-lg-10">
                            <input type="submit" value="@Resources.General.Create" class="btn btn-lg btn-success @alignclass" />
                            @Html.ActionLink(Resources.General.Back, "Index", new object { },
            new { @class = "btn btn-lg btn-primary" })
                        </div>
                    </div>
                </div>
            }


        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.js"></script>
<script>
    $('#ArabicText').summernote({
        placeholder: 'Terms & Conditions in Arabic',
        tabsize: 2,
        height: 200,
        toolbar: [
            ['style', ['style']],
            ['font', ['bold', 'underline', 'clear']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video']],
            ['view', ['fullscreen', 'codeview', 'help']]
        ]
    });
    $('#EnglishText').summernote({
        placeholder: 'Terms & Conditions in English',
        tabsize: 2,
        height: 200,
        toolbar: [
            ['style', ['style']],
            ['font', ['bold', 'underline', 'clear']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video']],
            ['view', ['fullscreen', 'codeview', 'help']]
        ]
    });


</script>
