@using HumanResourceHelth.Model.Resources

@model HumanResourceHelth.Model.Courses

@{
    ViewBag.Title = AppResource.AddCourse;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="panel panel-info">
        <div class="panel-heading">

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">@AppResource.AddCourse</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group mr-2">
                        <a class="btn btn-sm btn-warning" href="@Url.Action("Index")">
                            @AppResource.ShowAll
                            <i class="fa  fa-list"></i>
                        </a>
                    </div>

                </div>
            </div>

        </div>
        <div class="panel-body">

            @using (Html.BeginForm("Create", "Courses", FormMethod.Post, new
            {
                enctype = "multipart/form-data"
            }))
            {
                @Html.AntiForgeryToken()

                <hr />
                <div class="row">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.CourseID, new { htmlAttributes = new { @class = "form-control" } })
                        <div class="form-group">
                            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DepartmentID, "DepartmentID", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.DepartmentID, (SelectList)ViewBag.DepartmentsList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TrainerID, "TrainerID", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.TrainerID, (SelectList)ViewBag.TrainersList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TrainerID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CoursePrice, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CoursePrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CoursePrice, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CourseDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CourseDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CourseDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IntroText, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.IntroText, 5, 30, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                            @Html.ValidationMessageFor(model => model.IntroText, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.IntroVideo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.IntroVideo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IntroVideo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Requirements, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Requirements, 5, 30, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                            @Html.ValidationMessageFor(model => model.Requirements, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Description, 5, 30, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label" })

                            <input asp-for="Avatar" type="file" name="file" />
                            @{
                                if (ViewBag.coursesAvatar != null)
                                {
                                    <img src="~/Images/coursesAvatar/@ViewBag.coursesAvatar" height="100" />
                                }
                            }


                            @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                        </div>

                        <div class="row">
                            <div class="col-md-9">
                                <div class="form-group">
                                    <div class="checkbox mr-2">
                                        @Html.EditorFor(model => model.isActive)
                                        @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label" })

                                        @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-success btn-lg">
                                            @AppResource.Save
                                            <i class="fa  fa-save"></i>

                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink(@AppResource.BackToList, "Index")
            </div>


        </div>
    </div>
</div>
